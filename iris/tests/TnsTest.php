<?php
use GuzzleHttp\Handler\MockHandler;
use GuzzleHttp\HandlerStack;
use GuzzleHttp\Psr7\Response;
use GuzzleHttp\Middleware;

class TnsTest extends PHPUnit_Framework_TestCase {
    public static $container;
    public static $tns;
    public static $index = 0;

    public static function setUpBeforeClass() {
        $mock = new MockHandler([
			new Response(200, [], "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TelephoneNumbersResponse>    <TelephoneNumberCount>2</TelephoneNumberCount>    <Links>        <first>Link=&lt;https://api.test.inetwork.com:443/v1.0/tns?size=500&amp;page=1&gt;;rel=\"first\";</first>    </Links>    <TelephoneNumbers>        <TelephoneNumber>            <City>CHESAPEAKE</City>            <Lata>252</Lata>            <State>VA</State>            <FullNumber>7576768750</FullNumber>            <Tier>0</Tier>            <VendorId>49</VendorId>            <VendorName>Bandwidth CLEC</VendorName>            <RateCenter>NRFOLKZON1</RateCenter>            <Status>PortInPendingFoc</Status>            <AccountId>9500249</AccountId>            <LastModified>2015-06-03T15:10:13.000Z</LastModified>        </TelephoneNumber>        <TelephoneNumber>            <City>AGOURA</City>            <Lata>730</Lata>            <State>CA</State>            <FullNumber>8183386247</FullNumber>            <Tier>0</Tier>            <VendorId>49</VendorId>            <VendorName>Bandwidth CLEC</VendorName>            <RateCenter>AGOURA    </RateCenter>            <Status>Inservice</Status>            <AccountId>9500249</AccountId>            <LastModified>2015-05-30T14:40:54.000Z</LastModified>        </TelephoneNumber>    </TelephoneNumbers></TelephoneNumbersResponse>"),
            new Response(200, [], "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TelephoneNumberResponse>    <TelephoneNumber>7576768750</TelephoneNumber>    <Status>PortInPendingFoc</Status>    <LastModifiedDate>2015-06-03T15:10:13.000Z</LastModifiedDate>    <OrderCreateDate>2015-06-03T15:10:12.808Z</OrderCreateDate>    <OrderId>98939562-90b0-40e9-8335-5526432d9741</OrderId>    <OrderType>PORT_NUMBER_ORDER</OrderType>    <SiteId>2297</SiteId>    <AccountId>9500249</AccountId></TelephoneNumberResponse>"),
            new Response(200, [], "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TelephoneNumberResponse>    <TelephoneNumber>7576768750</TelephoneNumber>    <Status>PortInPendingFoc</Status>    <LastModifiedDate>2015-06-03T15:10:13.000Z</LastModifiedDate>    <OrderCreateDate>2015-06-03T15:10:12.808Z</OrderCreateDate>    <OrderId>98939562-90b0-40e9-8335-5526432d9741</OrderId>    <OrderType>PORT_NUMBER_ORDER</OrderType>    <SiteId>2297</SiteId>    <AccountId>9500249</AccountId></TelephoneNumberResponse>"),
            new Response(200, [], "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><Site>    <Id>2297</Id>    <Name>API Test Site</Name></Site>"),
            new Response(200, [], "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeer>    <Id>500651</Id>    <Name>Something</Name></SipPeer>"),
            new Response(200, [], "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TNReservation><ReservationId>123</ReservationId><AccountId>111</AccountId><ReservationExpires>int (seconds)</ReservationExpires><ReservedTn>6136211234</ReservedTn></TNReservation>"),
            new Response(200, [], "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TelephoneNumberResponse><TelephoneNumberDetails><City>JERSEY CITY</City><Lata>224</Lata><State>NJ</State><FullNumber>2018981023</FullNumber><Tier>0</Tier><VendorId>49</VendorId><VendorName>Bandwidth CLEC</VendorName><RateCenter>JERSEYCITY</RateCenter><Status>Inservice</Status><AccountId>14</AccountId><LastModified>2014-07-30T11:29:37.000Z</LastModified><Features><E911><Status>Success</Status></E911><Lidb><Status>Pending</Status><SubscriberInformation>Fred</SubscriberInformation><UseType>BUSINESS</UseType><Visibility>PUBLIC</Visibility></Lidb><Dlda><Status>Success</Status><SubscriberType>BUSINESS</SubscriberType><ListingType>LISTED</ListingType><ListingName><FirstName>Joe</FirstName><LastName>Smith</LastName></ListingName><ListAddress>true</ListAddress><Address><HouseNumber>12</HouseNumber><StreetName>ELM</StreetName><City>New York</City><StateCode>NY</StateCode><Zip>10007</Zip><Country>United States</Country><AddressType>Dlda</AddressType></Address></Dlda></Features><TnAttributes><TnAttribute>Protected</TnAttribute></TnAttributes></TelephoneNumberDetails></TelephoneNumberResponse>"),
            new Response(200, [], "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TelephoneNumberResponse>    <TelephoneNumberDetails>        <State>VA</State>        <RateCenter>NRFOLKZON1</RateCenter>    </TelephoneNumberDetails></TelephoneNumberResponse>"),
            new Response(200, [], "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TelephoneNumberResponse>    <TelephoneNumberDetails>        <Lata>252</Lata>    </TelephoneNumberDetails></TelephoneNumberResponse>"),
            new Response(200, [], "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SearchResult><ListofNPANXX><NPANXX>252429</NPANXX><NPANXX>757200</NPANXX><NPANXX>757201</NPANXX><NPANXX>757202</NPANXX><NPANXX>757203</NPANXX><NPANXX>757204</NPANXX><NPANXX>757205</NPANXX><NPANXX>757212</NPANXX><NPANXX>757213</NPANXX><NPANXX>757214</NPANXX><NPANXX>757215</NPANXX><NPANXX>757216</NPANXX><NPANXX>757217</NPANXX><NPANXX>757218</NPANXX><NPANXX>757219</NPANXX><NPANXX>757222</NPANXX><NPANXX>757223</NPANXX><NPANXX>757224</NPANXX><NPANXX>757225</NPANXX><NPANXX>757226</NPANXX><NPANXX>757227</NPANXX><NPANXX>757228</NPANXX><NPANXX>757230</NPANXX><NPANXX>757231</NPANXX><NPANXX>757232</NPANXX><NPANXX>757233</NPANXX><NPANXX>757234</NPANXX><NPANXX>757235</NPANXX><NPANXX>757236</NPANXX><NPANXX>757237</NPANXX><NPANXX>757238</NPANXX><NPANXX>757239</NPANXX><NPANXX>757240</NPANXX><NPANXX>757241</NPANXX><NPANXX>757242</NPANXX><NPANXX>757243</NPANXX><NPANXX>757244</NPANXX><NPANXX>757245</NPANXX><NPANXX>757246</NPANXX><NPANXX>757247</NPANXX><NPANXX>757248</NPANXX><NPANXX>757249</NPANXX><NPANXX>757251</NPANXX><NPANXX>757252</NPANXX><NPANXX>757254</NPANXX><NPANXX>757255</NPANXX><NPANXX>757256</NPANXX><NPANXX>757257</NPANXX><NPANXX>757261</NPANXX><NPANXX>757262</NPANXX><NPANXX>757263</NPANXX><NPANXX>757264</NPANXX><NPANXX>757265</NPANXX><NPANXX>757266</NPANXX><NPANXX>757268</NPANXX><NPANXX>757269</NPANXX><NPANXX>757270</NPANXX><NPANXX>757271</NPANXX><NPANXX>757272</NPANXX><NPANXX>757273</NPANXX><NPANXX>757274</NPANXX><NPANXX>757275</NPANXX><NPANXX>757277</NPANXX><NPANXX>757278</NPANXX><NPANXX>757279</NPANXX><NPANXX>757281</NPANXX><NPANXX>757282</NPANXX><NPANXX>757283</NPANXX><NPANXX>757284</NPANXX><NPANXX>757285</NPANXX><NPANXX>757286</NPANXX><NPANXX>757287</NPANXX><NPANXX>757288</NPANXX><NPANXX>757289</NPANXX><NPANXX>757291</NPANXX><NPANXX>757292</NPANXX><NPANXX>757295</NPANXX><NPANXX>757296</NPANXX><NPANXX>757297</NPANXX><NPANXX>757298</NPANXX><NPANXX>757299</NPANXX><NPANXX>757301</NPANXX><NPANXX>757303</NPANXX><NPANXX>757304</NPANXX><NPANXX>757305</NPANXX><NPANXX>757306</NPANXX><NPANXX>757307</NPANXX><NPANXX>757308</NPANXX><NPANXX>757309</NPANXX><NPANXX>757310</NPANXX><NPANXX>757312</NPANXX><NPANXX>757313</NPANXX><NPANXX>757314</NPANXX><NPANXX>757315</NPANXX><NPANXX>757316</NPANXX><NPANXX>757317</NPANXX><NPANXX>757318</NPANXX><NPANXX>757319</NPANXX><NPANXX>757320</NPANXX><NPANXX>757321</NPANXX><NPANXX>757322</NPANXX><NPANXX>757323</NPANXX><NPANXX>757324</NPANXX><NPANXX>757325</NPANXX><NPANXX>757326</NPANXX><NPANXX>757327</NPANXX><NPANXX>757328</NPANXX><NPANXX>757329</NPANXX><NPANXX>757330</NPANXX><NPANXX>757331</NPANXX><NPANXX>757332</NPANXX><NPANXX>757333</NPANXX><NPANXX>757334</NPANXX><NPANXX>757335</NPANXX><NPANXX>757337</NPANXX><NPANXX>757338</NPANXX><NPANXX>757339</NPANXX><NPANXX>757340</NPANXX><NPANXX>757341</NPANXX><NPANXX>757342</NPANXX><NPANXX>757343</NPANXX><NPANXX>757344</NPANXX><NPANXX>757347</NPANXX><NPANXX>757348</NPANXX><NPANXX>757349</NPANXX><NPANXX>757351</NPANXX><NPANXX>757352</NPANXX><NPANXX>757353</NPANXX><NPANXX>757354</NPANXX><NPANXX>757355</NPANXX><NPANXX>757356</NPANXX><NPANXX>757357</NPANXX><NPANXX>757358</NPANXX><NPANXX>757359</NPANXX><NPANXX>757360</NPANXX><NPANXX>757361</NPANXX><NPANXX>757362</NPANXX><NPANXX>757363</NPANXX><NPANXX>757364</NPANXX><NPANXX>757365</NPANXX><NPANXX>757366</NPANXX><NPANXX>757367</NPANXX><NPANXX>757368</NPANXX><NPANXX>757369</NPANXX><NPANXX>757370</NPANXX><NPANXX>757371</NPANXX><NPANXX>757372</NPANXX><NPANXX>757373</NPANXX><NPANXX>757374</NPANXX><NPANXX>757375</NPANXX><NPANXX>757376</NPANXX><NPANXX>757377</NPANXX><NPANXX>757379</NPANXX><NPANXX>757380</NPANXX><NPANXX>757382</NPANXX><NPANXX>757383</NPANXX><NPANXX>757384</NPANXX><NPANXX>757385</NPANXX><NPANXX>757386</NPANXX><NPANXX>757388</NPANXX><NPANXX>757389</NPANXX><NPANXX>757390</NPANXX><NPANXX>757391</NPANXX><NPANXX>757392</NPANXX><NPANXX>757393</NPANXX><NPANXX>757394</NPANXX><NPANXX>757395</NPANXX><NPANXX>757396</NPANXX><NPANXX>757397</NPANXX><NPANXX>757398</NPANXX><NPANXX>757399</NPANXX><NPANXX>757401</NPANXX><NPANXX>757402</NPANXX><NPANXX>757403</NPANXX><NPANXX>757404</NPANXX><NPANXX>757405</NPANXX><NPANXX>757406</NPANXX><NPANXX>757407</NPANXX><NPANXX>757408</NPANXX><NPANXX>757409</NPANXX><NPANXX>757410</NPANXX><NPANXX>757412</NPANXX><NPANXX>757413</NPANXX><NPANXX>757415</NPANXX><NPANXX>757416</NPANXX><NPANXX>757417</NPANXX><NPANXX>757418</NPANXX><NPANXX>757419</NPANXX><NPANXX>757420</NPANXX><NPANXX>757421</NPANXX><NPANXX>757422</NPANXX><NPANXX>757423</NPANXX><NPANXX>757424</NPANXX><NPANXX>757425</NPANXX><NPANXX>757426</NPANXX><NPANXX>757427</NPANXX><NPANXX>757428</NPANXX><NPANXX>757430</NPANXX><NPANXX>757431</NPANXX><NPANXX>757432</NPANXX><NPANXX>757433</NPANXX><NPANXX>757434</NPANXX><NPANXX>757435</NPANXX><NPANXX>757436</NPANXX><NPANXX>757437</NPANXX><NPANXX>757438</NPANXX><NPANXX>757439</NPANXX><NPANXX>757440</NPANXX><NPANXX>757441</NPANXX><NPANXX>757443</NPANXX><NPANXX>757444</NPANXX><NPANXX>757445</NPANXX><NPANXX>757446</NPANXX><NPANXX>757447</NPANXX><NPANXX>757448</NPANXX><NPANXX>757449</NPANXX><NPANXX>757450</NPANXX><NPANXX>757451</NPANXX><NPANXX>757452</NPANXX><NPANXX>757453</NPANXX><NPANXX>757454</NPANXX><NPANXX>757455</NPANXX><NPANXX>757456</NPANXX><NPANXX>757457</NPANXX><NPANXX>757459</NPANXX><NPANXX>757460</NPANXX><NPANXX>757461</NPANXX><NPANXX>757462</NPANXX><NPANXX>757463</NPANXX><NPANXX>757464</NPANXX><NPANXX>757465</NPANXX><NPANXX>757466</NPANXX><NPANXX>757467</NPANXX><NPANXX>757468</NPANXX><NPANXX>757469</NPANXX><NPANXX>757470</NPANXX><NPANXX>757471</NPANXX><NPANXX>757472</NPANXX><NPANXX>757473</NPANXX><NPANXX>757474</NPANXX><NPANXX>757475</NPANXX><NPANXX>757477</NPANXX><NPANXX>757478</NPANXX><NPANXX>757479</NPANXX><NPANXX>757480</NPANXX><NPANXX>757481</NPANXX><NPANXX>757482</NPANXX><NPANXX>757483</NPANXX><NPANXX>757484</NPANXX><NPANXX>757485</NPANXX><NPANXX>757486</NPANXX><NPANXX>757487</NPANXX><NPANXX>757488</NPANXX><NPANXX>757489</NPANXX><NPANXX>757490</NPANXX><NPANXX>757491</NPANXX><NPANXX>757492</NPANXX><NPANXX>757493</NPANXX><NPANXX>757494</NPANXX><NPANXX>757495</NPANXX><NPANXX>757496</NPANXX><NPANXX>757497</NPANXX><NPANXX>757498</NPANXX><NPANXX>757499</NPANXX><NPANXX>757501</NPANXX><NPANXX>757502</NPANXX><NPANXX>757503</NPANXX><NPANXX>757504</NPANXX><NPANXX>757506</NPANXX><NPANXX>757507</NPANXX><NPANXX>757508</NPANXX><NPANXX>757509</NPANXX><NPANXX>757510</NPANXX><NPANXX>757512</NPANXX><NPANXX>757513</NPANXX><NPANXX>757514</NPANXX><NPANXX>757515</NPANXX><NPANXX>757516</NPANXX><NPANXX>757517</NPANXX><NPANXX>757518</NPANXX><NPANXX>757519</NPANXX><NPANXX>757521</NPANXX><NPANXX>757523</NPANXX><NPANXX>757525</NPANXX><NPANXX>757527</NPANXX><NPANXX>757528</NPANXX><NPANXX>757529</NPANXX><NPANXX>757531</NPANXX><NPANXX>757532</NPANXX><NPANXX>757533</NPANXX><NPANXX>757534</NPANXX><NPANXX>757535</NPANXX><NPANXX>757536</NPANXX><NPANXX>757537</NPANXX><NPANXX>757538</NPANXX><NPANXX>757539</NPANXX><NPANXX>757541</NPANXX><NPANXX>757542</NPANXX><NPANXX>757543</NPANXX><NPANXX>757544</NPANXX><NPANXX>757545</NPANXX><NPANXX>757546</NPANXX><NPANXX>757547</NPANXX><NPANXX>757548</NPANXX><NPANXX>757549</NPANXX><NPANXX>757550</NPANXX><NPANXX>757552</NPANXX><NPANXX>757553</NPANXX><NPANXX>757554</NPANXX><NPANXX>757557</NPANXX><NPANXX>757558</NPANXX><NPANXX>757559</NPANXX><NPANXX>757560</NPANXX><NPANXX>757562</NPANXX><NPANXX>757563</NPANXX><NPANXX>757567</NPANXX><NPANXX>757569</NPANXX><NPANXX>757570</NPANXX><NPANXX>757572</NPANXX><NPANXX>757573</NPANXX><NPANXX>757574</NPANXX><NPANXX>757575</NPANXX><NPANXX>757576</NPANXX><NPANXX>757577</NPANXX><NPANXX>757578</NPANXX><NPANXX>757579</NPANXX><NPANXX>757580</NPANXX><NPANXX>757581</NPANXX><NPANXX>757582</NPANXX><NPANXX>757583</NPANXX><NPANXX>757584</NPANXX><NPANXX>757587</NPANXX><NPANXX>757588</NPANXX><NPANXX>757589</NPANXX><NPANXX>757591</NPANXX><NPANXX>757592</NPANXX><NPANXX>757593</NPANXX><NPANXX>757594</NPANXX><NPANXX>757595</NPANXX><NPANXX>757596</NPANXX><NPANXX>757597</NPANXX><NPANXX>757598</NPANXX><NPANXX>757599</NPANXX><NPANXX>757602</NPANXX><NPANXX>757604</NPANXX><NPANXX>757605</NPANXX><NPANXX>757606</NPANXX><NPANXX>757609</NPANXX><NPANXX>757610</NPANXX><NPANXX>757612</NPANXX><NPANXX>757613</NPANXX><NPANXX>757615</NPANXX><NPANXX>757616</NPANXX><NPANXX>757617</NPANXX><NPANXX>757618</NPANXX><NPANXX>757619</NPANXX><NPANXX>757620</NPANXX><NPANXX>757621</NPANXX><NPANXX>757622</NPANXX><NPANXX>757623</NPANXX><NPANXX>757624</NPANXX><NPANXX>757625</NPANXX><NPANXX>757626</NPANXX><NPANXX>757627</NPANXX><NPANXX>757628</NPANXX><NPANXX>757629</NPANXX><NPANXX>757630</NPANXX><NPANXX>757631</NPANXX><NPANXX>757632</NPANXX><NPANXX>757633</NPANXX><NPANXX>757635</NPANXX><NPANXX>757636</NPANXX><NPANXX>757637</NPANXX><NPANXX>757638</NPANXX><NPANXX>757639</NPANXX><NPANXX>757640</NPANXX><NPANXX>757641</NPANXX><NPANXX>757642</NPANXX><NPANXX>757643</NPANXX><NPANXX>757644</NPANXX><NPANXX>757646</NPANXX><NPANXX>757647</NPANXX><NPANXX>757648</NPANXX><NPANXX>757649</NPANXX><NPANXX>757650</NPANXX><NPANXX>757651</NPANXX><NPANXX>757652</NPANXX><NPANXX>757657</NPANXX><NPANXX>757659</NPANXX><NPANXX>757660</NPANXX><NPANXX>757661</NPANXX><NPANXX>757662</NPANXX><NPANXX>757663</NPANXX><NPANXX>757664</NPANXX><NPANXX>757666</NPANXX><NPANXX>757667</NPANXX><NPANXX>757668</NPANXX><NPANXX>757669</NPANXX><NPANXX>757670</NPANXX><NPANXX>757671</NPANXX><NPANXX>757672</NPANXX><NPANXX>757673</NPANXX><NPANXX>757675</NPANXX><NPANXX>757676</NPANXX><NPANXX>757677</NPANXX><NPANXX>757679</NPANXX><NPANXX>757680</NPANXX><NPANXX>757681</NPANXX><NPANXX>757682</NPANXX><NPANXX>757683</NPANXX><NPANXX>757685</NPANXX><NPANXX>757686</NPANXX><NPANXX>757687</NPANXX><NPANXX>757688</NPANXX><NPANXX>757689</NPANXX><NPANXX>757690</NPANXX><NPANXX>757692</NPANXX><NPANXX>757695</NPANXX><NPANXX>757696</NPANXX><NPANXX>757701</NPANXX><NPANXX>757705</NPANXX><NPANXX>757706</NPANXX><NPANXX>757708</NPANXX><NPANXX>757713</NPANXX><NPANXX>757714</NPANXX><NPANXX>757715</NPANXX><NPANXX>757716</NPANXX><NPANXX>757717</NPANXX><NPANXX>757718</NPANXX><NPANXX>757719</NPANXX><NPANXX>757721</NPANXX><NPANXX>757722</NPANXX><NPANXX>757723</NPANXX><NPANXX>757724</NPANXX><NPANXX>757725</NPANXX><NPANXX>757726</NPANXX><NPANXX>757727</NPANXX><NPANXX>757728</NPANXX><NPANXX>757729</NPANXX><NPANXX>757735</NPANXX><NPANXX>757736</NPANXX><NPANXX>757737</NPANXX><NPANXX>757738</NPANXX><NPANXX>757739</NPANXX><NPANXX>757740</NPANXX><NPANXX>757744</NPANXX><NPANXX>757745</NPANXX><NPANXX>757746</NPANXX><NPANXX>757747</NPANXX><NPANXX>757748</NPANXX><NPANXX>757749</NPANXX><NPANXX>757750</NPANXX><NPANXX>757751</NPANXX><NPANXX>757752</NPANXX><NPANXX>757753</NPANXX><NPANXX>757754</NPANXX><NPANXX>757755</NPANXX><NPANXX>757759</NPANXX><NPANXX>757761</NPANXX><NPANXX>757763</NPANXX><NPANXX>757764</NPANXX><NPANXX>757766</NPANXX><NPANXX>757768</NPANXX><NPANXX>757769</NPANXX><NPANXX>757770</NPANXX><NPANXX>757771</NPANXX><NPANXX>757772</NPANXX><NPANXX>757773</NPANXX><NPANXX>757774</NPANXX><NPANXX>757775</NPANXX><NPANXX>757776</NPANXX><NPANXX>757777</NPANXX><NPANXX>757778</NPANXX><NPANXX>757779</NPANXX><NPANXX>757783</NPANXX><NPANXX>757785</NPANXX><NPANXX>757788</NPANXX><NPANXX>757793</NPANXX><NPANXX>757795</NPANXX><NPANXX>757796</NPANXX><NPANXX>757797</NPANXX><NPANXX>757802</NPANXX><NPANXX>757803</NPANXX><NPANXX>757805</NPANXX><NPANXX>757806</NPANXX><NPANXX>757809</NPANXX><NPANXX>757810</NPANXX><NPANXX>757812</NPANXX><NPANXX>757813</NPANXX><NPANXX>757814</NPANXX><NPANXX>757816</NPANXX><NPANXX>757817</NPANXX><NPANXX>757818</NPANXX><NPANXX>757819</NPANXX><NPANXX>757820</NPANXX><NPANXX>757821</NPANXX><NPANXX>757822</NPANXX><NPANXX>757823</NPANXX><NPANXX>757825</NPANXX><NPANXX>757826</NPANXX><NPANXX>757827</NPANXX><NPANXX>757828</NPANXX><NPANXX>757830</NPANXX><NPANXX>757831</NPANXX><NPANXX>757833</NPANXX><NPANXX>757836</NPANXX><NPANXX>757837</NPANXX><NPANXX>757838</NPANXX><NPANXX>757839</NPANXX><NPANXX>757842</NPANXX><NPANXX>757844</NPANXX><NPANXX>757845</NPANXX><NPANXX>757846</NPANXX><NPANXX>757847</NPANXX><NPANXX>757848</NPANXX><NPANXX>757849</NPANXX><NPANXX>757850</NPANXX><NPANXX>757851</NPANXX><NPANXX>757852</NPANXX><NPANXX>757853</NPANXX><NPANXX>757855</NPANXX><NPANXX>757856</NPANXX><NPANXX>757857</NPANXX><NPANXX>757858</NPANXX><NPANXX>757860</NPANXX><NPANXX>757862</NPANXX><NPANXX>757864</NPANXX><NPANXX>757865</NPANXX><NPANXX>757867</NPANXX><NPANXX>757868</NPANXX><NPANXX>757869</NPANXX><NPANXX>757870</NPANXX><NPANXX>757871</NPANXX><NPANXX>757872</NPANXX><NPANXX>757873</NPANXX><NPANXX>757874</NPANXX><NPANXX>757875</NPANXX><NPANXX>757876</NPANXX><NPANXX>757877</NPANXX><NPANXX>757878</NPANXX><NPANXX>757879</NPANXX><NPANXX>757880</NPANXX><NPANXX>757881</NPANXX><NPANXX>757882</NPANXX><NPANXX>757883</NPANXX><NPANXX>757884</NPANXX><NPANXX>757885</NPANXX><NPANXX>757886</NPANXX><NPANXX>757887</NPANXX><NPANXX>757888</NPANXX><NPANXX>757889</NPANXX><NPANXX>757890</NPANXX><NPANXX>757892</NPANXX><NPANXX>757893</NPANXX><NPANXX>757896</NPANXX><NPANXX>757897</NPANXX><NPANXX>757898</NPANXX><NPANXX>757905</NPANXX><NPANXX>757908</NPANXX><NPANXX>757909</NPANXX><NPANXX>757912</NPANXX><NPANXX>757913</NPANXX><NPANXX>757915</NPANXX><NPANXX>757918</NPANXX><NPANXX>757921</NPANXX><NPANXX>757923</NPANXX><NPANXX>757924</NPANXX><NPANXX>757925</NPANXX><NPANXX>757926</NPANXX><NPANXX>757927</NPANXX><NPANXX>757928</NPANXX><NPANXX>757930</NPANXX><NPANXX>757931</NPANXX><NPANXX>757932</NPANXX><NPANXX>757933</NPANXX><NPANXX>757934</NPANXX><NPANXX>757935</NPANXX><NPANXX>757938</NPANXX><NPANXX>757939</NPANXX><NPANXX>757942</NPANXX><NPANXX>757943</NPANXX><NPANXX>757944</NPANXX><NPANXX>757945</NPANXX><NPANXX>757946</NPANXX><NPANXX>757947</NPANXX><NPANXX>757951</NPANXX><NPANXX>757952</NPANXX><NPANXX>757953</NPANXX><NPANXX>757954</NPANXX><NPANXX>757955</NPANXX><NPANXX>757961</NPANXX><NPANXX>757962</NPANXX><NPANXX>757963</NPANXX><NPANXX>757965</NPANXX><NPANXX>757966</NPANXX><NPANXX>757967</NPANXX><NPANXX>757968</NPANXX><NPANXX>757969</NPANXX><NPANXX>757971</NPANXX><NPANXX>757975</NPANXX><NPANXX>757983</NPANXX><NPANXX>757985</NPANXX><NPANXX>757986</NPANXX><NPANXX>757988</NPANXX><NPANXX>757989</NPANXX><NPANXX>757995</NPANXX><NPANXX>757998</NPANXX></ListofNPANXX><Location><RateCenters><State>NC</State><RCs><RC>KNOTTS IS </RC></RCs></RateCenters><RateCenters><State>VA</State><RCs><RC>CRITTENDEN</RC><RC>NRFOLKZON1</RC><RC>WHALEYVL  </RC><RC>NRFOLKZON2</RC><RC>NRFOLKZON3</RC><RC>WINDSOR   </RC><RC>SMITHFIELD</RC><RC>CAPECHARLS</RC><RC>NRFOLKZON4</RC><RC>FRANKLIN  </RC><RC>CHUCKATUCK</RC><RC>NWPTNWSZN3</RC><RC>NWPTNWSZN4</RC><RC>HOLLAND   </RC><RC>NRFOLKZON6</RC><RC>SUFFOLK   </RC><RC>NWPTNWSZN1</RC><RC>NWPTNWSZN2</RC></RCs></RateCenters></Location></SearchResult>"),
        ]);

        self::$container = [];
        $history = Middleware::history(self::$container);
        $handler = HandlerStack::create($mock);
        $handler->push($history);

        $client = new Iris\Client("test", "test", Array('url' => 'https://api.test.inetwork.com/v1.0', 'handler' => $handler));
        self::$tns = new Iris\Tns(null, $client);
    }

	public function testTnsGet() {
		$tns = self::$tns->getList(["page" => 1, "size" => 10 ]);

        $this->assertEquals(2, count($tns));
		$this->assertEquals("7576768750", $tns[0]->FullNumber);
        $this->assertEquals("GET", self::$container[self::$index]['request']->getMethod());
        $this->assertEquals("https://api.test.inetwork.com/v1.0/tns?page=1&size=10", (string) self::$container[self::$index]['request']->getUri());
        self::$index++;
    }
    public function testTnGet() {
        $tn = self::$tns->tn("7576768750");

        $this->assertEquals("PortInPendingFoc", $tn->Status);
        $this->assertEquals("98939562-90b0-40e9-8335-5526432d9741", $tn->OrderId);
        $this->assertEquals("GET", self::$container[self::$index]['request']->getMethod());
        $this->assertEquals("https://api.test.inetwork.com/v1.0/tns/7576768750", (string) self::$container[self::$index]['request']->getUri());
        self::$index++;
    }

    public function testSiteGet() {
        $tn = self::$tns->tn("7576768750");
        self::$index++;

        $site = $tn->site();

        $this->assertEquals("2297", $site->Id);
        $this->assertEquals("API Test Site", $site->Name);
        $this->assertEquals("GET", self::$container[self::$index]['request']->getMethod());
        $this->assertEquals("https://api.test.inetwork.com/v1.0/tns/7576768750/sites", (string) self::$container[self::$index]['request']->getUri());
        self::$index++;
    }

    public function testSippeerGet() {
        $tn = self::$tns->create([ "FullNumber" => "7576768750", "AccountId" => "9500249", "SiteId" => "2297"]);

        $sippeer = $tn->sippeer();

        $this->assertEquals("500651", $sippeer->PeerId);
        $this->assertEquals("Something", $sippeer->PeerName);
        $this->assertEquals("GET", self::$container[self::$index]['request']->getMethod());
        $this->assertEquals("https://api.test.inetwork.com/v1.0/tns/7576768750/sippeers", (string) self::$container[self::$index]['request']->getUri());
        self::$index++;
    }

    public function testTNReservationGet() {
        $tn = self::$tns->create([ "FullNumber" => "7576768750", "AccountId" => "9500249", "SiteId" => "2297"]);

        $tnreservation = $tn->tnreservation();

        $json = '{"ReservedTn":"6136211234","ReservationId":"123","ReservationExpires":"int (seconds)","AccountId":"111"}';
		$this->assertEquals($json, json_encode($tnreservation->to_array()));
        $this->assertEquals("GET", self::$container[self::$index]['request']->getMethod());
        $this->assertEquals("https://api.test.inetwork.com/v1.0/tns/7576768750/tnreservation", (string) self::$container[self::$index]['request']->getUri());
        self::$index++;
    }

    public function testTnDetails() {
        $tn = self::$tns->create([ "FullNumber" => "7576768750"]);
        $tn->tndetails();

        $json = '{"City":"JERSEY CITY","Lata":"224","State":"NJ","FullNumber":"2018981023","Tier":"0","VendorId":"49","VendorName":"Bandwidth CLEC","RateCenter":"JERSEYCITY","Status":"Inservice","AccountId":"14","LastModified":"2014-07-30T11:29:37.000Z","Features":{"E911":{"Status":"Success"},"Lidb":{"Status":"Pending","SubscriberInformation":"Fred","UseType":"BUSINESS","Visibility":"PUBLIC"},"Dlda":{"Status":"Success","SubscriberType":"BUSINESS","ListingType":"LISTED","ListingName":{"FirstName":"Joe","LastName":"Smith"},"ListAddress":"true","Address":{"City":"New York","HouseNumber":"12","StreetName":"ELM","StateCode":"NY","Zip":"10007","Country":"United States","AddressType":"Dlda"}}},"TnAttributes":{"TnAttribute":"Protected"}}';
		$this->assertEquals($json, json_encode($tn->to_array()));

        $this->assertEquals("GET", self::$container[self::$index]['request']->getMethod());
        $this->assertEquals("https://api.test.inetwork.com/v1.0/tns/7576768750/tndetails", (string) self::$container[self::$index]['request']->getUri());
        self::$index++;
    }

    public function testTnRatecenter() {
        $tn = self::$tns->create([ "FullNumber" => "7576768750"]);
        $rc = $tn->ratecenter();

        $json = '{"RateCenter":"NRFOLKZON1","State":"VA"}';
		$this->assertEquals($json, json_encode($rc->to_array()));

        $this->assertEquals("GET", self::$container[self::$index]['request']->getMethod());
        $this->assertEquals("https://api.test.inetwork.com/v1.0/tns/7576768750/ratecenter", (string) self::$container[self::$index]['request']->getUri());
        self::$index++;
    }

    public function testTnLata() {
        $tn = self::$tns->create([ "FullNumber" => "7576768750"]);
        $rc = $tn->lata();

        $json = '{"Lata":"252"}';
		$this->assertEquals($json, json_encode($rc->to_array()));

        $this->assertEquals("GET", self::$container[self::$index]['request']->getMethod());
        $this->assertEquals("https://api.test.inetwork.com/v1.0/tns/7576768750/lata", (string) self::$container[self::$index]['request']->getUri());
        self::$index++;
    }

    public function testTnLca() {
        $tn = self::$tns->create([ "FullNumber" => "7576768750"]);
        $rc = $tn->lca();

        $json = '{"ListofNPANXX":{"NPANXX":["252429","757200","757201","757202","757203","757204","757205","757212","757213","757214","757215","757216","757217","757218","757219","757222","757223","757224","757225","757226","757227","757228","757230","757231","757232","757233","757234","757235","757236","757237","757238","757239","757240","757241","757242","757243","757244","757245","757246","757247","757248","757249","757251","757252","757254","757255","757256","757257","757261","757262","757263","757264","757265","757266","757268","757269","757270","757271","757272","757273","757274","757275","757277","757278","757279","757281","757282","757283","757284","757285","757286","757287","757288","757289","757291","757292","757295","757296","757297","757298","757299","757301","757303","757304","757305","757306","757307","757308","757309","757310","757312","757313","757314","757315","757316","757317","757318","757319","757320","757321","757322","757323","757324","757325","757326","757327","757328","757329","757330","757331","757332","757333","757334","757335","757337","757338","757339","757340","757341","757342","757343","757344","757347","757348","757349","757351","757352","757353","757354","757355","757356","757357","757358","757359","757360","757361","757362","757363","757364","757365","757366","757367","757368","757369","757370","757371","757372","757373","757374","757375","757376","757377","757379","757380","757382","757383","757384","757385","757386","757388","757389","757390","757391","757392","757393","757394","757395","757396","757397","757398","757399","757401","757402","757403","757404","757405","757406","757407","757408","757409","757410","757412","757413","757415","757416","757417","757418","757419","757420","757421","757422","757423","757424","757425","757426","757427","757428","757430","757431","757432","757433","757434","757435","757436","757437","757438","757439","757440","757441","757443","757444","757445","757446","757447","757448","757449","757450","757451","757452","757453","757454","757455","757456","757457","757459","757460","757461","757462","757463","757464","757465","757466","757467","757468","757469","757470","757471","757472","757473","757474","757475","757477","757478","757479","757480","757481","757482","757483","757484","757485","757486","757487","757488","757489","757490","757491","757492","757493","757494","757495","757496","757497","757498","757499","757501","757502","757503","757504","757506","757507","757508","757509","757510","757512","757513","757514","757515","757516","757517","757518","757519","757521","757523","757525","757527","757528","757529","757531","757532","757533","757534","757535","757536","757537","757538","757539","757541","757542","757543","757544","757545","757546","757547","757548","757549","757550","757552","757553","757554","757557","757558","757559","757560","757562","757563","757567","757569","757570","757572","757573","757574","757575","757576","757577","757578","757579","757580","757581","757582","757583","757584","757587","757588","757589","757591","757592","757593","757594","757595","757596","757597","757598","757599","757602","757604","757605","757606","757609","757610","757612","757613","757615","757616","757617","757618","757619","757620","757621","757622","757623","757624","757625","757626","757627","757628","757629","757630","757631","757632","757633","757635","757636","757637","757638","757639","757640","757641","757642","757643","757644","757646","757647","757648","757649","757650","757651","757652","757657","757659","757660","757661","757662","757663","757664","757666","757667","757668","757669","757670","757671","757672","757673","757675","757676","757677","757679","757680","757681","757682","757683","757685","757686","757687","757688","757689","757690","757692","757695","757696","757701","757705","757706","757708","757713","757714","757715","757716","757717","757718","757719","757721","757722","757723","757724","757725","757726","757727","757728","757729","757735","757736","757737","757738","757739","757740","757744","757745","757746","757747","757748","757749","757750","757751","757752","757753","757754","757755","757759","757761","757763","757764","757766","757768","757769","757770","757771","757772","757773","757774","757775","757776","757777","757778","757779","757783","757785","757788","757793","757795","757796","757797","757802","757803","757805","757806","757809","757810","757812","757813","757814","757816","757817","757818","757819","757820","757821","757822","757823","757825","757826","757827","757828","757830","757831","757833","757836","757837","757838","757839","757842","757844","757845","757846","757847","757848","757849","757850","757851","757852","757853","757855","757856","757857","757858","757860","757862","757864","757865","757867","757868","757869","757870","757871","757872","757873","757874","757875","757876","757877","757878","757879","757880","757881","757882","757883","757884","757885","757886","757887","757888","757889","757890","757892","757893","757896","757897","757898","757905","757908","757909","757912","757913","757915","757918","757921","757923","757924","757925","757926","757927","757928","757930","757931","757932","757933","757934","757935","757938","757939","757942","757943","757944","757945","757946","757947","757951","757952","757953","757954","757955","757961","757962","757963","757965","757966","757967","757968","757969","757971","757975","757983","757985","757986","757988","757989","757995","757998"]},"Location":{"RateCenters":[{"State":"NC","RCs":{"RC":"KNOTTS IS"}},{"State":"VA","RCs":{"RC":["CRITTENDEN","NRFOLKZON1","WHALEYVL","NRFOLKZON2","NRFOLKZON3","WINDSOR","SMITHFIELD","CAPECHARLS","NRFOLKZON4","FRANKLIN","CHUCKATUCK","NWPTNWSZN3","NWPTNWSZN4","HOLLAND","NRFOLKZON6","SUFFOLK","NWPTNWSZN1","NWPTNWSZN2"]}}]}}';
		$this->assertEquals($json, json_encode($rc->to_array()));

        $this->assertEquals("GET", self::$container[self::$index]['request']->getMethod());
        $this->assertEquals("https://api.test.inetwork.com/v1.0/tns/7576768750/lca", (string) self::$container[self::$index]['request']->getUri());
        self::$index++;
    }


}
